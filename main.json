[
    {
        "id": "ec120fa2edfe719f",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c1b13fb30c829ab7",
        "type": "ui_form",
        "z": "ec120fa2edfe719f",
        "name": "Firewall Login Info",
        "label": "Firewall Login Info",
        "group": "5f0b10fec7464c32",
        "order": 2,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "firewall name",
                "value": "name",
                "type": "checkbox",
                "required": true,
                "rows": null
            },
            {
                "label": "IP Address",
                "value": "ip_address",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Expert Password",
                "value": "expert_password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": false,
            "ip_address": "",
            "password": "",
            "expert_password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "e1064f4564d24adc"
            ]
        ]
    },
    {
        "id": "e1064f4564d24adc",
        "type": "function",
        "z": "ec120fa2edfe719f",
        "name": "Function Check Ip",
        "func": "let ip = msg.payload['ip_address'];\n\n// Regex pattern untuk validasi IPv4\nconst ipv4Pattern = /^(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)$/;\n\n// Memeriksa apakah IP valid\nlet isValid = ipv4Pattern.test(ip);\n\n// Menambahkan hasil validasi ke payload\nmsg.payload['isvalid'] = isValid;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 340,
        "wires": [
            [
                "97547dedf9e3ca2a"
            ]
        ]
    },
    {
        "id": "9b87dccdff0993c0",
        "type": "debug",
        "z": "ec120fa2edfe719f",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 440,
        "wires": []
    },
    {
        "id": "97547dedf9e3ca2a",
        "type": "function",
        "z": "ec120fa2edfe719f",
        "name": "Function Cryptograpy",
        "func": "if (!msg.payload[\"isvalid\"]){\n    return msg.bijji = 0;\n}\n\nconst crypto = global.get(\"crypto\");\n\nconst passphrase = \"k*2ja6g3n1\";\n\nfunction deriveKey(passphrase, salt) {\n    return crypto.pbkdf2Sync(passphrase, salt, 16384, 32, 'sha256');\n}\n\nfunction encryptPassword(plainPassword) {\n    const salt = crypto.randomBytes(16); // 16 bytes for salt\n    const nonce = crypto.randomBytes(12); // 12 bytes for AES-GCM nonce\n    const key = deriveKey(passphrase, salt);\n\n    const cipher = crypto.createCipheriv('aes-256-gcm', key, nonce);\n    const ciphertext = Buffer.concat([cipher.update(plainPassword, 'utf8'), cipher.final()]);\n    const tag = cipher.getAuthTag(); // 16 bytes for authentication tag\n\n    // Combine nonce, salt, tag, and ciphertext\n    const encryptedData = Buffer.concat([nonce, salt, tag, ciphertext]);\n\n    return encryptedData.toString('base64'); // Encode as Base64 for storage/transmission\n}\n\n// Example usage in Node-RED\nconst expertPassword = msg.payload['expert_password'];\nconst password = msg.payload['password'];\n// Assuming msg.payload contains the password to encrypt\nmsg.payload['expert_password'] = encryptPassword(expertPassword);\nmsg.payload['password'] = encryptPassword(password);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 340,
        "wires": [
            [
                "bac9d0258aa4c75b",
                "9b87dccdff0993c0"
            ]
        ]
    },
    {
        "id": "bac9d0258aa4c75b",
        "type": "debug",
        "z": "ec120fa2edfe719f",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 340,
        "wires": []
    },
    {
        "id": "a2ec40f127faef11",
        "type": "ui_form",
        "z": "ec120fa2edfe719f",
        "name": "Firewall Data Info",
        "label": "Firewall Data Info",
        "group": "ce0b45e54974f03f",
        "order": 2,
        "width": "0",
        "height": "0",
        "options": [
            {
                "label": "firewall name",
                "value": "name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "firewall Location",
                "value": "location",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "firewall Site",
                "value": "site",
                "type": "text",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "name": "",
            "location": "",
            "site": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "1481c87136d9e6f6"
            ]
        ]
    },
    {
        "id": "52eb6b6c8e022e1f",
        "type": "ui_dropdown",
        "z": "ec120fa2edfe719f",
        "name": "",
        "label": "",
        "tooltip": "",
        "place": "Select option",
        "group": "ce0b45e54974f03f",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "x": 1240,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "ac1c8e8c36a9a85e",
        "type": "function",
        "z": "ec120fa2edfe719f",
        "name": "function 2",
        "func": "msg.options = [\n    { \"label\": \"Option 1\", \"value\": 1 },\n    { \"label\": \"Option 2\", \"value\": 2 },\n    { \"label\": \"Option 3\", \"value\": 3 }\n];\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 240,
        "wires": [
            [
                "52eb6b6c8e022e1f"
            ]
        ]
    },
    {
        "id": "1481c87136d9e6f6",
        "type": "MSSQL",
        "z": "ec120fa2edfe719f",
        "mssqlCN": "4a627f09ccdae4bf",
        "name": "Test",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "INSERT INTO tbl_m_firewall (fw_name, fw_location, fw_site) VALUES ({{payload.name}}, {{payload.location}}, {{payload.site}});\r\n",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 450,
        "y": 240,
        "wires": [
            [
                "cc9ad39275c04e08"
            ]
        ]
    },
    {
        "id": "cc9ad39275c04e08",
        "type": "trigger",
        "z": "ec120fa2edfe719f",
        "name": "",
        "op1": "1",
        "op2": "0",
        "op1type": "val",
        "op2type": "val",
        "duration": "250",
        "extend": "false",
        "overrideDelay": "false",
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 620,
        "y": 240,
        "wires": [
            [
                "834d8fe49592836b"
            ]
        ]
    },
    {
        "id": "834d8fe49592836b",
        "type": "MSSQL",
        "z": "ec120fa2edfe719f",
        "mssqlCN": "4a627f09ccdae4bf",
        "name": "",
        "outField": "payload",
        "returnType": 0,
        "throwErrors": 1,
        "query": "",
        "modeOpt": "queryMode",
        "modeOptType": "query",
        "queryOpt": "payload",
        "queryOptType": "editor",
        "paramsOpt": "queryParams",
        "paramsOptType": "none",
        "rows": "rows",
        "rowsType": "msg",
        "parseMustache": true,
        "params": [],
        "x": 860,
        "y": 240,
        "wires": [
            [
                "ac1c8e8c36a9a85e"
            ]
        ]
    },
    {
        "id": "a8a0b64da63c967d",
        "type": "inject",
        "z": "ec120fa2edfe719f",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "834d8fe49592836b"
            ]
        ]
    },
    {
        "id": "759a22d88c2fba68",
        "type": "ui_spacer",
        "z": "ec120fa2edfe719f",
        "name": "spacer",
        "group": "5f0b10fec7464c32",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "3fe764f07780ea8d",
        "type": "ui_spacer",
        "z": "ec120fa2edfe719f",
        "name": "spacer",
        "group": "ce0b45e54974f03f",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "5f0b10fec7464c32",
        "type": "ui_group",
        "name": "Layer2",
        "tab": "f53f48ec431449a3",
        "order": 2,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "ce0b45e54974f03f",
        "type": "ui_group",
        "name": "Layer1",
        "tab": "f53f48ec431449a3",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false
    },
    {
        "id": "4a627f09ccdae4bf",
        "type": "MSSQL-CN",
        "tdsVersion": "7_4",
        "name": "CP_FW_DEVEL",
        "server": "DESKTOP-E5QF6IJ",
        "port": "1433",
        "encyption": true,
        "trustServerCertificate": true,
        "database": "DBO_CHECKPOINT_FIREWALL",
        "useUTC": true,
        "connectTimeout": "15000",
        "requestTimeout": "15000",
        "cancelTimeout": "5000",
        "pool": "5",
        "parseJSON": false,
        "enableArithAbort": true,
        "readOnlyIntent": false
    },
    {
        "id": "f53f48ec431449a3",
        "type": "ui_tab",
        "name": "cpfwinput",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]